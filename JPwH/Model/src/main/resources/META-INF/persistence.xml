<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
    <!--
        Demo Persistence Unit
    -->
    <persistence-unit name="DemoPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model.entities.Mensaje</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <!-- Le motor JPA elimina y vuelve a crear el esquema SQL en la base de datos automaticamente en cada reinicio.-->
            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
            <!--Deshabilita el escaneo, de forma que no se anhada de forma automatica ningun hbm.xml de forma automatica -->
            <property name="hibernate.archive.autodetection" value="none"/>
        </properties>
    </persistence-unit>
    <!--
        My Simple Persistence Unit
    -->
    <persistence-unit name="mySimplePUnit">
        <jta-data-source>myDS</jta-data-source>
        <mapping-file>simple/Queries.xml</mapping-file>
        <class>es.my.model</class>
        <class>es.my.model.entities.Item</class>
        <class>es.my.model.entities.Usuario</class>
        <class>es.my.model.entities.Bid</class>
        <class>es.my.model.entities.Direccion</class>
        <class>es.my.model.entities.Categoria</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <!--
            When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
            <!--
            Enable this to try a custom table naming strategy
            <property name="hibernate.physical_naming_strategy" value="es.my.jph.shared.CENamingStrategy"/>
            -->
        </properties>
    </persistence-unit>
    <!--
        My Advanced Persistence Unit
    -->
    <persistence-unit name="myAdvancedPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.advanced.Item2</class>
        <class>es.my.model.entities.advanced.Provincia2</class>
        <class>es.my.model.entities.advanced.Direccion2</class>
        <class>es.my.model.entities.advanced.Usuario2</class>
        <class>es.my.model.entities.advanced.Bid</class>
        <class>es.my.model.entities.advanced.ItemBidSummary</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
            When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
        </properties>
    </persistence-unit>
    <!--
        My Converter Persistence Unit
    -->
    <persistence-unit name="myConverterPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.advanced.converter.ItemConverter</class>
        <class>es.my.model.entities.advanced.converter.UsuarioConverter</class>
        <!-- 
               Si esta deshabilitado el escaneo automatico las clases @Converter
               deben ser anhadidas aqui.
        -->
        <class>es.my.converters.ValorMonetarioConverter</class>
        <class>es.my.converters.ZipCodeConverter</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
        </properties>
    </persistence-unit>
    <!--
        My UserType Persistence Unit
    -->
    <persistence-unit name="myTypesPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.converters</class>
        <class>es.my.model.entities.advanced.usertype.ItemUserType</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
        </properties>
    </persistence-unit>
    <!--
        My MappedSuperclass Persistence Unit
    -->
    <persistence-unit name="myMappedSuperclassPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.mappedsuperclass.BillingDetails</class>
        <class>es.my.model.entities.herencia.mappedsuperclass.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.mappedsuperclass.TarjetaCredito</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myTablePerClassPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.tableperclass.BillingDetails</class>
        <class>es.my.model.entities.herencia.tableperclass.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.tableperclass.TarjetaCredito</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySingleTablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.singletable.BillingDetails</class>
        <class>es.my.model.entities.herencia.singletable.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.singletable.TarjetaCredito</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myJoinedPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.joined.BillingDetails</class>
        <class>es.my.model.entities.herencia.joined.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.joined.TarjetaCredito</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMixedPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.mixed.BillingDetails</class>
        <class>es.my.model.entities.herencia.mixed.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.mixed.TarjetaCredito</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myHerenciaEmbedablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.embeddable.Medida</class>
        <class>es.my.model.entities.herencia.embeddable.Dimensiones</class>
        <class>es.my.model.entities.herencia.embeddable.Peso</class>
        <class>es.my.model.entities.herencia.embeddable.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myPolimorfismoManyToOnePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.asociaciones.manytoone.BillingDetails</class>
        <class>es.my.model.entities.herencia.asociaciones.manytoone.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.asociaciones.manytoone.TarjetaCredito</class>
        <class>es.my.model.entities.herencia.asociaciones.manytoone.User</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myPolimorfismoOneToManyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.herencia.asociaciones.onetomany.BillingDetails</class>
        <class>es.my.model.entities.herencia.asociaciones.onetomany.CuentaBancaria</class>
        <class>es.my.model.entities.herencia.asociaciones.onetomany.TarjetaCredito</class>
        <class>es.my.model.entities.herencia.asociaciones.onetomany.User</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySetOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.setofstrings.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myBagOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.bagofstrings.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myListOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.listofstrings.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMapOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.mapofstrings.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySortedMapOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.sortedmapofstrings.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySortedSetOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.sortedsetofstrings.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySetOfStringsOrderByPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.setofstringsorderby.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myBagOfStringsOrderByPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.bagofstringsorderby.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMapOfStringsOrderByPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.mapofstringsorderby.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySetOfEmbeddablesPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.setofembeddables.Item</class>
        <class>es.my.model.entities.colecciones.setofembeddables.Imagen</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySetOfEmbeddablesOrderByPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.setofembeddablesorderby.Item</class>
        <class>es.my.model.entities.colecciones.setofembeddablesorderby.Imagen</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myBagOfEmbeddablesPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.bagofembeddables.Item</class>
        <class>es.my.model.entities.colecciones.bagofembeddables.Imagen</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMapOfStringsEmbeddablesPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.mapofstringsembeddables.Item</class>
        <class>es.my.model.entities.colecciones.mapofstringsembeddables.Imagen</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMapOfEmbeddablesPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.mapofembeddables.Item</class>
        <class>es.my.model.entities.colecciones.mapofembeddables.Imagen</class>
        <class>es.my.model.entities.colecciones.mapofembeddables.Fichero</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myEmbeddableSetOfStringsPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.colecciones.embeddablesetofstrings.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyBidirectionalPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.bidirectional.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.bidirectional.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyCascadaPersistPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.cascadapersist.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.cascadapersist.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyCascadaRemovePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.cascadaremove.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.cascadaremove.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyOrphanRemovePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.orphanremove.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.orphanremove.Item</class>
        <class>es.my.model.entities.asociaciones.onetomany.orphanremove.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyOnDeleteCascadePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.ondeletecascade.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.ondeletecascade.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToOneSharedPrimaryKeyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetoone.sharedprimarykey.Direccion</class>
        <class>es.my.model.entities.asociaciones.onetoone.sharedprimarykey.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToOneForeignGeneratorPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetoone.foreigngenerator.Direccion</class>
        <class>es.my.model.entities.asociaciones.onetoone.foreigngenerator.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToOneForeignKeyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetoone.foreignkey.Direccion</class>
        <class>es.my.model.entities.asociaciones.onetoone.foreignkey.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToOneJoinTablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetoone.jointable.Item</class>
        <class>es.my.model.entities.asociaciones.onetoone.jointable.Transporte</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyBagPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.bag.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.bag.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyListPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.list.Bid</class>
        <class>es.my.model.entities.asociaciones.onetomany.list.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyJoinTablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.jointable.Usuario</class>
        <class>es.my.model.entities.asociaciones.onetomany.jointable.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyEmbeddablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.embeddable.Usuario</class>
        <class>es.my.model.entities.asociaciones.onetomany.embeddable.Envio</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myOneToManyEmbeddableJoinTablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.onetomany.embeddablejointable.Usuario</class>
        <class>es.my.model.entities.asociaciones.onetomany.embeddablejointable.Envio</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myManyToManyBidirectionalPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.manytomany.bidirectional.Categoria</class>
        <class>es.my.model.entities.asociaciones.manytomany.bidirectional.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myManyToManyLinkEntityPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.manytomany.linkentity.CategorizedItem</class>
        <class>es.my.model.entities.asociaciones.manytomany.linkentity.Categoria</class>
        <class>es.my.model.entities.asociaciones.manytomany.linkentity.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myManyToManyTernaryPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.manytomany.ternary.CategorizedItem</class>
        <class>es.my.model.entities.asociaciones.manytomany.ternary.Categoria</class>
        <class>es.my.model.entities.asociaciones.manytomany.ternary.Item</class>
        <class>es.my.model.entities.asociaciones.manytomany.ternary.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMapsMapKeyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.mapas.mapkey.Bid</class>
        <class>es.my.model.entities.asociaciones.mapas.mapkey.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myMapsTernaryPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.asociaciones.mapas.ternary.Categoria</class>
        <class>es.my.model.entities.asociaciones.mapas.ternary.Item</class>
        <class>es.my.model.entities.asociaciones.mapas.ternary.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myCustomSchemaPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.custom.Bid</class>
        <class>es.my.model.entities.complexschemas.custom.Item</class>
        <class>es.my.model.entities.complexschemas.custom.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
            
            <property name="hibernate.hbm2ddl.import_files_sql_extractor" value="org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor"/>
            <property name="javax.persistence.schema-generation.create-source"        value="script-then-metadata"/>
            <property name="javax.persistence.schema-generation.drop-source"          value="metadata-then-script"/>
            <property name="javax.persistence.schema-generation.create-script-source" value="complexschemas/CreateScript.sql.txt"/>
            <property name="javax.persistence.schema-generation.drop-scipt-source"    value="complexschemas/DropScript.sql.txt"/>
            <property name="javax.persistence.sql-load-script-source"                 value="complexschemas/LoadScript.sql.txt"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myNaturalPrimaryKeyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.naturalprimarykey.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myCompositeKeyEmbeddedIdPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.compositekey.embedded.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myCompositeKeyMapsIdPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.compositekey.mapsid.Usuario</class>
        <class>es.my.model.entities.complexschemas.compositekey.mapsid.Empresa</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myCompositeKeyReadOnlyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.compositekey.readonly.Usuario</class>
        <class>es.my.model.entities.complexschemas.compositekey.readonly.Empresa</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myCompositeKeyManyToOnePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.compositekey.manytoone.Usuario</class>
        <class>es.my.model.entities.complexschemas.compositekey.manytoone.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myNaturalForeignKeyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.naturalforeignkey.Usuario</class>
        <class>es.my.model.entities.complexschemas.naturalforeignkey.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="mySecondaryTablePUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.complexschemas.secondarytable.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myFetchingReadOnlyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.fetching.readonly.Item</class>
        <class>es.my.model.entities.fetching.readonly.Usuario</class>
        <class>es.my.model.entities.fetching.readonly.Bid</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myConcurrencyVersioningPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.concurrency.version.Item</class>
        <class>es.my.model.entities.concurrency.version.Categoria</class>
        <class>es.my.model.entities.concurrency.version.Bid</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myConcurrencyVersioningTimestampPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.concurrency.versiontimestamp.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myConcurrencyVersioningAllPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.concurrency.versionall.Item</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myFetchingProxyPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.fetching.proxy.Categoria</class>
        <class>es.my.model.entities.fetching.proxy.Item</class>
        <class>es.my.model.entities.fetching.proxy.Bid</class>
        <class>es.my.model.entities.fetching.proxy.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="myFetchingInterceptionPUnit">
        <jta-data-source>myDS</jta-data-source>
        <class>es.my.model</class>
        <class>es.my.model.entities.fetching.interception.Item</class>
        <class>es.my.model.entities.fetching.interception.Usuario</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    
        <properties>
            <!--
               When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"              value="true"/>
            <property name="hibernate.use_sql_comments"        value="true"/>
            <property name="hibernate.show_sql"                value="true"/>
        </properties>
    </persistence-unit>
</persistence>
