<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
    
     <!--
        My Simple Persistence Unit
    -->
    <persistence-unit name="mySimplePUnit">
        <jta-data-source>myDS</jta-data-source>

        <class>es.my.model</class>
        <class>es.my.model.entities.Item</class>
        <class>es.my.model.entities.Categoria</class>
        
        <exclude-unlisted-classes>true</exclude-unlisted-classes>

        <properties>
            <!--
            When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"       value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql"         value="true"/>
            
            <!--
            Enable this to try a custom table naming strategy
            <property name="hibernate.physical_naming_strategy" value="org.jpwh.shared.CENamingStrategy"/>
            -->
        </properties>
    </persistence-unit>

    <!-- *********************************************************************** -->
    <persistence-unit name="HelloWorldPU">
        <jta-data-source>myDS</jta-data-source>
        
        <class>org.jpwh.model.helloworld.Message</class>
        
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        
        <properties>
            <!-- 
                The JPA engine should drop and re-create the SQL schema in the database
                automatically when it boots. This is ideal for automated testing, when
                you want to work with a clean database for every test run.
            -->
            <property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
            <property name="hibernate.format_sql"       value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql"         value="true"/>
            <!--
            Disable Hibernate scanning completely, we also don't want any hbm.xml files discovered and added automatically.
            -->
            <property name="hibernate.archive.autodetection" value="none"/>
        </properties>
    </persistence-unit>
    <persistence-unit name="SimplePU">
        <jta-data-source>myDS</jta-data-source>
        
        <mapping-file>simple/Queries.xml</mapping-file>
        
        <class>org.jpwh.model</class>
        <class>org.jpwh.model.simple.Item</class>
        <class>org.jpwh.model.simple.User</class>
        <class>org.jpwh.model.simple.Bid</class>
        <class>org.jpwh.model.simple.Address</class>
        <class>org.jpwh.model.simple.Category</class>
        
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        
        <properties>
            <!--
            When remove(entity) is called, reset the identifier value of entity. so it's considered transient after removal 
            -->
            <property name="hibernate.use_identifier_rollback" value="true"/>
            <property name="hibernate.format_sql"       value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql"         value="true"/>
            
            <!--
            Enable this to try a custom table naming strategy
            <property name="hibernate.physical_naming_strategy" value="org.jpwh.shared.CENamingStrategy"/>
            -->
        </properties>
    </persistence-unit>
    
    <persistence-unit name="AdvancedPU">
        <jta-data-source>myDS</jta-data-source>
        <class>org.jpwh.model</class>
        <class>org.jpwh.model.advanced.Item2</class>
        <class>org.jpwh.model.advanced.Bid</class>
        <class>org.jpwh.model.advanced.User</class>
        <class>org.jpwh.model.advanced.Address</class>
        <class>org.jpwh.model.advanced.City</class>
        <class>org.jpwh.model.advanced.ItemBidSummary</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
    </persistence-unit>
</persistence>
